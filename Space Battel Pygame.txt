import random
import pygame
import math
#inisalization
pygame.init()
#importing display
background=pygame.image.load('14350820_5471985.jpg')
screen=pygame.display.set_mode((800,600))
#title,logo,background
pygame.display.set_caption("Space battle")
icon=pygame.image.load('spaceship.png')
pygame.display.set_icon(icon)

#adding battle ship
image = pygame.image.load('spaceship.png')
player_x=370
player_y=500
player_changex=0
def battleship(left_player,right_plyer):
   screen.blit(image,(left_player,right_plyer))

#enimey loader
enimey_x=[]
enimey_y=[]
enimey_changex=[]
enimey_changey=[]
enimery=[]
enimey_number=4
for i in range (enimey_number):
    enimey_x.append(random.randint(10,730))
    enimey_y.append(random.randint(0,400))
    enimey_changex.append(0.3)
    enimey_changey.append(40)
    enimery.append(pygame.image.load('space-ship.png'))
def enimey(enimey_x,enimey_y,i):
    screen.blit(enimery[i],(enimey_x,enimey_y))
#bullet
bullet=pygame.image.load('bullet.png')
bullet_x=370
bullet_y=500
bullet_changeX=0
bullet_changeY=0.5
bullet_satus="ready"
def bulletfire(x,y):
    global bullet_satus
    bullet_satus='fire'
    screen.blit(bullet,(x+16,y+10))

#collision dection
score=0
def collision_dection(enimey_x,enimey_y,bullet_x,bullet_y):
    distance=math.sqrt((math.pow(enimey_x-bullet_x,2)+math.pow(enimey_y-bullet_y,2)))
    if(distance<27):
        return True


#game over
over_font=pygame.font.Font('freesansbold.ttf',64)
def game_over():
    over_text=over_font.render("GAME OVER",True,(225,225,225))
    screen.blit(over_text,(200,250))
    score_dis=over_font.render("SCORE: "+str(score),True,(225,225,255))
    screen.blit(score_dis,(200,350))

#score
font=pygame.font.Font('freesansbold.ttf',12)
def score_display(x,y):
    font_over = font.render("SCORE: "+str(score), True, (225, 225, 225))
    screen.blit(font_over,(x,y))




#brain of the code
running=True
while running:
    screen.fill((0,0,0))
    screen.blit(background,(0,0))
    for event in pygame.event.get():
        #for closing the game
        if(event.type==pygame.QUIT):
            running=False
        #for checking the key
        if(event.type==pygame.KEYDOWN):
            if(event.key==pygame.K_LEFT):
                player_changex=-0.1
            if(event.key==pygame.K_RIGHT):
               player_changex=0.1
            #bullet shooting
            if(event.key==pygame.K_SPACE):
                if bullet_satus is 'ready':
                    bullet_x = player_x
                    bulletfire(bullet_x,bullet_y)
            if(event.type==pygame.KEYUP):
                if(event.key==pygame.K_LEFT or event.key ==pygame.K_RIGHT):
                    player_changex=0




    #boundary for battel ship
    player_x += player_changex
    if(player_x<=0):
        player_x=0
    elif(player_x>=730):
        player_x=730
    #boundary for enimey
    for i in range(enimey_number):
        if (enimey_y[i]>440):
            for j in range(enimey_number):
                enimey_y[j]=2000
            game_over()
            break

        enimey_x[i]+=enimey_changex[i]
        if (enimey_x[i] <= 0):
            enimey_changex[i] = 0.1
            enimey_y [i]+= enimey_changey[i]
        elif (enimey_x[i] >= 730):
            enimey_changex[i] = -0.1
            enimey_y[i] += enimey_changey[i]
        #collision of enimey and battel ship
        collision = collision_dection(enimey_x[i], enimey_y[i], bullet_x, bullet_y)
        if (collision):
            bullet_y = 500
            bullet_satus = 'ready'
            score +=1
            enimey_x[i] = random.randint(0, 730)
            enimey_y[i] = random.randint(50, 150)
        enimey(enimey_x[i], enimey_y[i],i)

    #bullet movement
    if(bullet_y<=0):
        bullet_y=500
        bullet_satus='ready'
    if bullet_satus is 'fire':
        bulletfire(bullet_x, bullet_y)
        bullet_y -= bullet_changeY


    score_display(10,10)
    battleship(player_x, player_y)
    pygame.display.update()
